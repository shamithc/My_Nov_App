#require 'rack/oauth2'

class FacebooksController < ApplicationController
  before_filter :require_authentication, :only => :destroy

  # handle Facebook Auth Cookie generated by JavaScript SDK
  def show
    auth = Facebook.auth.from_cookie(cookies)
    #render :text => auth.user.access_token  and return
    @user=Facebook.find_or_create_by_identifier_and_access_token(auth.user.identifier.try(:to_s),auth.user.access_token)
    #render :text =>"#{@user.identifier}----#{@user.access_token}" and return
    #authenticate Facebook.identify(auth.user)
    #access_data= Facebook.identify(auth.user)
    authenticate(@user)
    session[:fb_id] =@user.identifier      
    #render :text =>session[:fb_id] and return   
    redirect_to dashboard_url
  end

  # handle Normal OAuth flow: start
  def new
    redirect_to client.authorization_uri(
      :scope => Facebook.config[:perms]
    )
  end

  # handle Normal OAuth flow: callback
 # def create
 #   client.authorization_code = params[:code]
 #   access_token = client.access_token!
 #   user = FbGraph::User.me(access_token).fetch
 #   authenticate Facebook.identify(user)
 #   redirect_to dashboard_url
 # end

  def destroy
    unauthenticate
    redirect_to root_url
  end
   
  def logout
  end

  private

  def client
    unless @client
      @client = Facebook.auth.client
      @client.redirect_uri = callback_facebook_url
    end
    @client
  end

end
